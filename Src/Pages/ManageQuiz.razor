@page "/manage-quizzes"
@rendermode InteractiveServer

@inject IJSRuntime js
@inject NavigationManager navigationManager
@inject QuizRepository quizRepository

<MyMudProviders />

<PageTitle>Manage Quizzes</PageTitle>


<MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" class="py-10 px-6">
    <LinkButton Href="/" Color="Color.Info">
        <MudIcon Icon="@Icons.Material.Filled.ArrowBack" />
        Back
    </LinkButton>
    <MainTitle Text="Manage Quizzes" />
    <MudButton Color="Color.Info" Variant="Variant.Filled" Style="min-width: 320px; font-size: 1.6rem;"
        OnClick="Service.InitCreateQuiz">
        Create New
        <MudIcon Icon="@Icons.Material.Filled.Add" />
    </MudButton>
</MudStack>

@if (Quizzes == null)
{
    <NoteText>Loading...</NoteText>
}
else if (Quizzes.Count == 0)
{
    <NoteText>No games found.</NoteText>
}
else
{
    <MudContainer MaxWidth="MaxWidth.Medium">

    <MudTable Items="@Quizzes" Hover="true" Style="background-color: transparent; color: white" Class="custom-table">
        <HeaderContent>
            <MudTh>Title</MudTh>
            <MudTh>Nr. of questions</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel=" Title">@context.Title</MudTd>
            <MudTd DataLabel="Nr. of questions">@context.Questions.Count</MudTd>
            <MudTd>
                <MudStack Justify="Justify.FlexEnd" Row>

                    <MudIconButton Size="Size.Medium" Icon="@Icons.Material.Filled.Edit" Color="Color.Info"
                        OnClick="() => Service.InitEditQuiz(context)" />
                    <MudIconButton Size="Size.Medium" Icon="@Icons.Material.Filled.Delete" Color="Color.Error"
                        OnClick="() => Service.InitDeleteQuiz(context)" />
                </MudStack>
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudContainer>

}
@code {
    private ManageQuizService Service { get; set; }
    private List<Quiz> Quizzes { get => Service.Quizzes; }

    protected override async Task OnInitializedAsync()
    {
        Service = new ManageQuizService(quizRepository, navigationManager, js);
        await Service.LoadQuizzes();
    }
}